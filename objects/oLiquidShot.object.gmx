<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sLiquidShot</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>self</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = 20

SecondsUntilWeExplode = random_range(0.1,0.2)
Exploding = false

PuddleLifeTime = 2
SecondsUntilFadeOut = PuddleLifeTime
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* Destroy When we Leave the Room*/

if x &lt; 0 or y &lt; 0 or x &gt; room_width or y &gt; room_height {
    instance_destroy() 
    }

//If we are about to hit a block  
if place_meeting(x + hspeed, y + vspeed, oSolid) {

        //Stop
        speed = 0

}

//If speed is larger than deceleration, decelerate. 
Deceleration = 400 / (room_speed * room_speed)
if speed &gt; Deceleration {
    speed = speed - Deceleration
    
} else {
    speed = 0
}
    
EnemyHit = instance_place(x,y,oEnemy)

if instance_exists(EnemyHit) {
    EnemyHit.x = EnemyHit.x + lengthdir_x(speed,direction)
    EnemyHit.y = EnemyHit.y + lengthdir_y(speed,direction)
}


//Set a timer for explosion if we arent already exploding    
if Exploding = true {

    SecondsUntilWeExplode = SecondsUntilWeExplode - (1/room_speed)
    if SecondsUntilWeExplode &lt; 0 {
        //Creates Explosion
        instance_create(x,y,oExplosion)
        instance_destroy()
    }
    
} else {

    //Explosion when oBullet collides with oLiquidShot
    ProjectileHit = instance_place(x,y,oProjectile)
    if instance_exists(ProjectileHit) {
        Exploding = true
    }
    
}


//Make oLiquidShot fade out once it loses speed
if instance_exists(self.id) {
    if speed = 0 {
        SecondsUntilFadeOut = SecondsUntilFadeOut - 1/room_speed
        image_alpha = SecondsUntilFadeOut / PuddleLifeTime
        //Make explosion grow for a split second before it fades away
        image_xscale = 1 + (1 - image_alpha)
        image_yscale = 1 + (1 - image_alpha)
        if image_alpha &lt;=0 { instance_destroy()}
    
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
